/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Iris;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.derby.iapi.store.raw.Page;
import static Iris.main.table;

/**
 *
 * @author PC
 */
public class cv extends javax.swing.JFrame {
    ArrayList<Double> db2 = new ArrayList<>();
    ArrayList<Double> db1 = new ArrayList<>();
    ArrayList<Double> sample = new ArrayList<>();
    DefaultListModel dlm = new DefaultListModel();
    int counter = 0;
    double SampleMean;
    double samplesd;
    double variance;
    static DefaultTableModel a = new DefaultTableModel();

    
    public cv() {
        initComponents();
        a.setColumnIdentifiers(new Object[]{"ID", "SAMPLE"});
        jTable1.setModel(a);
        jList1.setModel(dlm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        confide_mean = new javax.swing.JButton();
        confide_variance = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        confide_mean.setText("MEAN");
        confide_mean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confide_meanActionPerformed(evt);
            }
        });

        confide_variance.setText("VARIANCE");
        confide_variance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confide_varianceActionPerformed(evt);
            }
        });

        jButton3.setText("Go Back!");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("VIEW DATA");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jButton5.setText("EXIT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText(" CONFIDENCE INTERVAL OF SAMPLE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(confide_variance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confide_mean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(71, 71, 71))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(confide_mean, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(confide_variance, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton3)
                        .addGap(29, 29, 29))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confide_meanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confide_meanActionPerformed
         double std, meann = 0.0;//CONFİDE INTERVAL FOR MEAN
        int size2 = sample.size();
        if (size2 == 0) {JOptionPane.showMessageDialog(null, "Please, click the VIEW DATA to create sample");
        } else { int size = db2.size();
            double[] sArr = new double[size];
            for (int i = 0; i < size; i++) {
                sArr[i] = db2.get(i); }
            for (int i = 0; i < size; i++) {
                sArr[i] = db2.get(i);}
            double sum = 0;
            for (int i = 0; i < size; i++) {
                sum = sum + sArr[i];}
            meann = sum / size;
            double k = 0.0;
            for (int i = 0; i < size; i++) {
                k += Math.pow(sArr[i] - meann, 2);}std = Math.sqrt(k / size);
            System.out.println("STANDART DAVIATION = " + std);
            if (samplesd == 0) {
                samplesd = std; }
            double[] sampleArr = new double[size2];
            for (int i = 0; i < size2; i++) {
                sampleArr[i] = sample.get(i);}
            Arrays.sort(sampleArr);
            double sumSample = 0;
            for (int i = 0; i < sampleArr.length; i++) {
                sumSample = sumSample + sampleArr[i];}
            SampleMean = sumSample / size2;
            System.out.println("Sample Mean = " + SampleMean);
            double sizex = Math.sqrt(sampleArr.length);
            double cvu = SampleMean + (1.96) * (samplesd / sizex);
            double cva = SampleMean - (1.96) * (samplesd / sizex);
            dlm.removeAllElements();
            dlm.addElement(cva + "< µ <" + cvu); }
    }//GEN-LAST:event_confide_meanActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (counter == 0) {
            try {
                Connection c = DriverManager.getConnection("jdbc:derby://localhost:1527/MERVE", "MERVE", "123");
                Statement s = c.createStatement();
                ResultSet rs = s.executeQuery("SELECT * FROM IRIS");
                while (rs.next()) {

                    db2.add(rs.getDouble("SepalLengthCm"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Page.class.getName()).log(Level.SEVERE, null, ex);
            }

            int len = db2.size();
            double[] sArr = new double[len];
            for (int i = 0; i < len; i++) {
                sArr[i] = db2.get(i);
            }
            for (int i = 0; i < 41; i++) {
                Random rastgele = new Random();
                int a = rastgele.nextInt(sArr.length);
                sample.add(sArr[a]);
            }
            int size2 = sample.size();
            double[] sampleArr = new double[size2];
            for (int i = 0; i < size2; i++) {
                sampleArr[i] = sample.get(i);
            }

            Arrays.sort(sampleArr);
            System.out.println("THE SAMPLE : ");
            for (int i = 0; i < sampleArr.length; i++) {
                System.out.print(sampleArr[i] + ", ");

                a.addRow(new Object[]{i + 1, sampleArr[i]});
            }
            counter++;

        } else {
            JOptionPane.showMessageDialog(null, "The sample has been created");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void confide_varianceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confide_varianceActionPerformed
//CONFİDE INTERVAL FOR VARİANCE
        int sizeofsample = sample.size();
        if (sizeofsample == 0) {
            JOptionPane.showMessageDialog(null, "Please, click the VIEW DATA to create sample");
        } else {
            double[] sampleArr = new double[sizeofsample];
            for (int i = 0; i < sizeofsample; i++) {
                sampleArr[i] = sample.get(i);}
            Arrays.sort(sampleArr);
            double totalSum = 0;
            for (int i = 0; i < sampleArr.length; i++) {
                totalSum = totalSum + sampleArr[i];            }
            SampleMean = totalSum / sizeofsample;
            System.out.println("mean : " + SampleMean);
            double samplesd = 0.0;
            double c = 0.0;
            for (int i = 0; i < sampleArr.length; i++) {
                c += (sampleArr[i] - SampleMean) * (sampleArr[i] - SampleMean);}
            samplesd = Math.sqrt(c / (sampleArr.length - 1));
            double samplevar = Math.pow(samplesd, 2);
            System.out.println("SAMPLE STD : " + samplesd);
            double sizex = Math.sqrt(sampleArr.length);
            double cvav = ((sampleArr.length - 1) * samplevar) / (59.3417);
            double cvuv = ((sampleArr.length - 1) * samplevar) / (24.4331);
            System.out.println("Sample Variance " + samplevar);
            System.out.println(cvav + " < σ2 < " + cvuv);
            dlm.removeAllElements();
            dlm.addElement(cvav + "< σ2 <" + cvuv);
        }

    }//GEN-LAST:event_confide_varianceActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new main().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confide_mean;
    private javax.swing.JButton confide_variance;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
